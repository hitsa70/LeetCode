/**
Runtime: 5 ms, faster than 18.51% of Java online submissions for Add Two Numbers II.
Memory Usage: 45 MB, less than 10.48% of Java online submissions for Add Two Numbers II.



 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        Stack<Integer> stack1 =new Stack<>();
        Stack<Integer> stack2 =new Stack<>();
        
        while(l1!=null){
            stack1.push(l1.val);
            l1=l1.next;
        }
        
        while(l2!=null){
            stack2.push(l2.val);
            l2=l2.next;
        }
        
        int sum=0;
        ListNode result= new ListNode(0) ;
        
        
        while( !stack1.empty() || !stack2.empty() )
        {
            if(!stack1.empty()) sum+=stack1.pop();
            
            if(!stack2.empty()) sum+=stack2.pop();
            
            result.val=sum%10;
            
            ListNode head= new ListNode(sum/10);
            
            head.next=result;
            result =head;
            sum/=10;
            
            
        }
        
        return result.val == 0 ? result.next : result;
        
        
    }
}
